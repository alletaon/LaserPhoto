package ServoConRemote;


/**
* ServoConRemote/_ICNCStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ServoConRemote_v2.idl
* Wednesday, April 19, 2017 6:32:21 PM MSK
*/

public class _ICNCStub extends org.omg.CORBA.portable.ObjectImpl implements ServoConRemote.ICNC
{


  //to reload cnc - all references will become invalid!
  public void Restart ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Restart", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                Restart (        );
            } finally {
                _releaseReply ($in);
            }
  } // Restart

  public int[] GetActiveGCodes ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetActiveGCodes", true);
                $in = _invoke ($out);
                int $result[] = ServoConRemote.ICNCPackage.GCodesStateHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetActiveGCodes (        );
            } finally {
                _releaseReply ($in);
            }
  } // GetActiveGCodes

  public int[] GetActiveMCodes ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetActiveMCodes", true);
                $in = _invoke ($out);
                int $result[] = ServoConRemote.ICNCPackage.MCodesStateHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetActiveMCodes (        );
            } finally {
                _releaseReply ($in);
            }
  } // GetActiveMCodes

  public void TurnOn () throws ServoConRemote.CNCError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("TurnOn", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/CNCError:1.0"))
                    throw ServoConRemote.CNCErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                TurnOn (        );
            } finally {
                _releaseReply ($in);
            }
  } // TurnOn

  public void TurnOff () throws ServoConRemote.CNCError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("TurnOff", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/CNCError:1.0"))
                    throw ServoConRemote.CNCErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                TurnOff (        );
            } finally {
                _releaseReply ($in);
            }
  } // TurnOff

  public void ToggleState () throws ServoConRemote.CNCError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ToggleState", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/CNCError:1.0"))
                    throw ServoConRemote.CNCErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                ToggleState (        );
            } finally {
                _releaseReply ($in);
            }
  } // ToggleState

  public ServoConRemote.LongProcess StartHoming () throws ServoConRemote.CNCError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("StartHoming", true);
                $in = _invoke ($out);
                ServoConRemote.LongProcess $result = ServoConRemote.LongProcessHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/CNCError:1.0"))
                    throw ServoConRemote.CNCErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return StartHoming (        );
            } finally {
                _releaseReply ($in);
            }
  } // StartHoming


  //FIXME: ExecuteCommand process may sometimes be signalled done before command is actually completed
  public ServoConRemote.LongProcess ExecuteCommand (String command) throws ServoConRemote.CNCError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ExecuteCommand", true);
                $out.write_string (command);
                $in = _invoke ($out);
                ServoConRemote.LongProcess $result = ServoConRemote.LongProcessHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/CNCError:1.0"))
                    throw ServoConRemote.CNCErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ExecuteCommand (command        );
            } finally {
                _releaseReply ($in);
            }
  } // ExecuteCommand

  public ServoConRemote.IUserParameter State ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_State", true);
                $in = _invoke ($out);
                ServoConRemote.IUserParameter $result = ServoConRemote.IUserParameterHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return State (        );
            } finally {
                _releaseReply ($in);
            }
  } // State

  public ServoConRemote.Position GetPartPosition ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetPartPosition", true);
                $in = _invoke ($out);
                ServoConRemote.Position $result = ServoConRemote.PositionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetPartPosition (        );
            } finally {
                _releaseReply ($in);
            }
  } // GetPartPosition

  public ServoConRemote.Position GetMachinePosition ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetMachinePosition", true);
                $in = _invoke ($out);
                ServoConRemote.Position $result = ServoConRemote.PositionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetMachinePosition (        );
            } finally {
                _releaseReply ($in);
            }
  } // GetMachinePosition

  public ServoConRemote.Position GetPositionError ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetPositionError", true);
                $in = _invoke ($out);
                ServoConRemote.Position $result = ServoConRemote.PositionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetPositionError (        );
            } finally {
                _releaseReply ($in);
            }
  } // GetPositionError


  //stub - doesn't work yet
  public ServoConRemote.IJoint Joint (int num) throws ServoConRemote.InvalidAxis
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Joint", true);
                $out.write_long (num);
                $in = _invoke ($out);
                ServoConRemote.IJoint $result = ServoConRemote.IJointHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/InvalidAxis:1.0"))
                    throw ServoConRemote.InvalidAxisHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Joint (num        );
            } finally {
                _releaseReply ($in);
            }
  } // Joint


  //handles execution of programs (AUTO mode)
  public ServoConRemote.IMotionProgram MotionProgram ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_MotionProgram", true);
                $in = _invoke ($out);
                ServoConRemote.IMotionProgram $result = ServoConRemote.IMotionProgramHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return MotionProgram (        );
            } finally {
                _releaseReply ($in);
            }
  } // MotionProgram


  //handles import/export
  public ServoConRemote.IConfiguration Configuration ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_Configuration", true);
                $in = _invoke ($out);
                ServoConRemote.IConfiguration $result = ServoConRemote.IConfigurationHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Configuration (        );
            } finally {
                _releaseReply ($in);
            }
  } // Configuration

  public ServoConRemote.IHMIC HMIC ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_HMIC", true);
                $in = _invoke ($out);
                ServoConRemote.IHMIC $result = ServoConRemote.IHMICHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return HMIC (        );
            } finally {
                _releaseReply ($in);
            }
  } // HMIC

  public ServoConRemote.IScope Scope ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_Scope", true);
                $in = _invoke ($out);
                ServoConRemote.IScope $result = ServoConRemote.IScopeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Scope (        );
            } finally {
                _releaseReply ($in);
            }
  } // Scope

  public ServoConRemote.ITools Tools ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_Tools", true);
                $in = _invoke ($out);
                ServoConRemote.ITools $result = ServoConRemote.IToolsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Tools (        );
            } finally {
                _releaseReply ($in);
            }
  } // Tools

  public ServoConRemote.IOffsets Offsets ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_Offsets", true);
                $in = _invoke ($out);
                ServoConRemote.IOffsets $result = ServoConRemote.IOffsetsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Offsets (        );
            } finally {
                _releaseReply ($in);
            }
  } // Offsets

  public ServoConRemote.ILocale Locale ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_Locale", true);
                $in = _invoke ($out);
                ServoConRemote.ILocale $result = ServoConRemote.ILocaleHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Locale (        );
            } finally {
                _releaseReply ($in);
            }
  } // Locale

  public ServoConRemote.IStorage Storage ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_Storage", true);
                $in = _invoke ($out);
                ServoConRemote.IStorage $result = ServoConRemote.IStorageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Storage (        );
            } finally {
                _releaseReply ($in);
            }
  } // Storage


  //low-level
  public ServoConRemote.IUserParameter Parameter (String name) throws ServoConRemote.NotFound
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Parameter", true);
                $out.write_string (name);
                $in = _invoke ($out);
                ServoConRemote.IUserParameter $result = ServoConRemote.IUserParameterHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/NotFound:1.0"))
                    throw ServoConRemote.NotFoundHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Parameter (name        );
            } finally {
                _releaseReply ($in);
            }
  } // Parameter

  public ServoConRemote.IUserParameter CreateParameter (String name, ServoConRemote.IUserParameterPackage.Type type)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("CreateParameter", true);
                $out.write_string (name);
                ServoConRemote.IUserParameterPackage.TypeHelper.write ($out, type);
                $in = _invoke ($out);
                ServoConRemote.IUserParameter $result = ServoConRemote.IUserParameterHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return CreateParameter (name, type        );
            } finally {
                _releaseReply ($in);
            }
  } // CreateParameter

  public ServoConRemote.IUserParameter CreatePersistent (String name, ServoConRemote.IUserParameterPackage.Type type)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("CreatePersistent", true);
                $out.write_string (name);
                ServoConRemote.IUserParameterPackage.TypeHelper.write ($out, type);
                $in = _invoke ($out);
                ServoConRemote.IUserParameter $result = ServoConRemote.IUserParameterHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return CreatePersistent (name, type        );
            } finally {
                _releaseReply ($in);
            }
  } // CreatePersistent


  //low-level - avoid if possible!!!
  public ServoConRemote.IAction Action (String name) throws ServoConRemote.NotFound
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Action", true);
                $out.write_string (name);
                $in = _invoke ($out);
                ServoConRemote.IAction $result = ServoConRemote.IActionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ServoConRemote/NotFound:1.0"))
                    throw ServoConRemote.NotFoundHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Action (name        );
            } finally {
                _releaseReply ($in);
            }
  } // Action

  public void StartSelfTest ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("StartSelfTest", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                StartSelfTest (        );
            } finally {
                _releaseReply ($in);
            }
  } // StartSelfTest

  public void disconnect_push_supplier ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("disconnect_push_supplier", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                disconnect_push_supplier (        );
            } finally {
                _releaseReply ($in);
            }
  } // disconnect_push_supplier

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ServoConRemote/ICNC:1.0", 
    "IDL:ServoConRemote/CNCMessageSupplier:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ICNCStub
